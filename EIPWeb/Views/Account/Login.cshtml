@model EIPWeb.Models.ViewModel.LoginViewModel

@{
    ViewBag.Title = "Login";
}

<h2>使用者登入</h2>


@*@using (Html.BeginForm())*@
@using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="logintype">
        @Html.LabelFor(model => model.UserID, new { @class = "control-label" })
        <div class="controls">
            @Html.TextBoxFor(model => model.UserID, new { @class = "form-control", placeholder = "請輸入登入帳號" })
            @Html.ValidationMessageFor(model => model.UserID, null, new { @class = "help-inline" })
        </div>
    </div>
    <div class="logintype">
        @Html.LabelFor(model => model.Password, new { @class = "control-label" })
        <div class="controls">
            @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = "請輸入登入密碼" })
            @Html.ValidationMessageFor(model => model.Password, null, new { @class = "help-inline" })
        </div>
    </div>

    <div class="logintype">
        @TempData["Error"]
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    </div>
    <input type="submit" name="button" value="登入">

    @*
    <div class="form-horizontal">
        <h4>Account</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GroupCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GroupCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GroupCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsEnable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsEnable)
                    @Html.ValidationMessageFor(model => model.IsEnable, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
    *@
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
